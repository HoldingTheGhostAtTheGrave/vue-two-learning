{"version":3,"file":"vue.js","sources":["../../src/compile/generate.js","../../src/compile/parse.js","../../src/compile/index.js","../../src/utils.js","../../src/observer/dep.js","../../src/observer/watcher.js","../../src/vdom/patch.js","../../src/lifecycle.js","../../src/observer/array.js","../../src/observer/index.js","../../src/state.js","../../src/init.js","../../src/global-api/extend.js","../../src/global-api/index.js","../../src/vdom/index.js","../../src/index.js"],"sourcesContent":["const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; // 匹配 {{}} 内容\r\n\r\nfunction genProps (attrs) {\r\n    let str = '';\r\n    for (let index = 0; index < attrs.length; index++) {\r\n        let attr = attrs[index];\r\n        if(attr.name ==='style'){\r\n            let obj = {};\r\n            attr.value.split(';').forEach(element => {\r\n                let [key , value] = element.split(':');\r\n                obj[key] = value;\r\n            });\r\n            attr.value = obj;\r\n        }\r\n        str += `${ attr.name }:${ JSON.stringify(attr.value) },`;\r\n    }\r\n    return `{${str.slice(0,-1)}}`;\r\n}\r\n\r\nfunction gen (node){\r\n    if(node.type == 1){\r\n        return generate(node); //生成元素节点\r\n    }else{\r\n        let text = node.text;\r\n        // 如果是普通文本 直接返回处理\r\n        if(defaultTagRE.test(text)){\r\n            let tokens = []; // 存放每一段代码\r\n            let lastIndex = defaultTagRE.lastIndex = 0; // 如果正则是全局模式 每次使用前都需要更改 为 0 （不然会导致匹配不到）\r\n            let match , index;\r\n\r\n            // defaultTagRE.exec(text) 捕获到 是否存在匹配到的值\r\n            while (match = defaultTagRE.exec(text)) {\r\n                index = match.index; // 保存匹配到的索引\r\n                if(index > lastIndex) {\r\n                    tokens.push(JSON.stringify(text.slice(lastIndex , index)));\r\n                }\r\n                tokens.push(`_s(${ match[1].trim() })`);\r\n                lastIndex = index + match[0].length;\r\n            }\r\n\r\n            if(lastIndex < text.length){\r\n                tokens.push(JSON.stringify( text.slice(lastIndex) ));\r\n            }\r\n            return `_v(${ tokens.join('+') })`;\r\n        }else{\r\n            return `_v(${ JSON.stringify(text) })`;\r\n        }\r\n        \r\n    }\r\n}\r\n\r\n\r\nfunction genChildren (children) {\r\n    if(children){\r\n        return children.map((child) => gen(child)).join(',');\r\n    }\r\n}\r\n\r\nexport function generate (ast) {\r\n    let children = genChildren(ast.children);\r\n    let code = `_c('${ast.tag}',${ \r\n        ast.attrs.length ? `${genProps(ast.attrs)}` : 'undefined'\r\n    }${\r\n        ast.children ? `,${children}` : ''\r\n    })`;\r\n\r\n    return code;\r\n}","\r\nconst ncname = `[a-zA-Z ][\\\\-\\\\.0-9_a-zA-Z]*`; // 标签名\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; // ?: 匹配但不捕获\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // // 标签开头的正则 捕获的内容是标签名\r\nconst endTag = new RegExp(`^<\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>\r\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^’]*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的\r\n\r\n// 生成 ast\r\nexport function parseHTML(html) {\r\n\tlet root;\r\n\tlet currentParent;\r\n\tlet stack = [];\r\n\t// // 解析开始标签\r\n\tfunction start(tagName, attrs) {\r\n\t\tlet element = createASTElement(tagName, attrs);\r\n\t\tif (!root) {\r\n\t\t\troot = element;\r\n\t\t}\r\n\t\tcurrentParent = element;\r\n\t\tstack.push(element);\r\n\t}\r\n \r\n\t// 结束标签 创建父子关系 \r\n\tfunction end(endTag) {\r\n        let element = stack.pop();\r\n\t\tcurrentParent = stack[stack.length - 1]; // 吧子元素 = currentParent\r\n\t\tif(currentParent){\r\n\t\t\telement.parent = currentParent; // 标签的 父元素\r\n\t\t\tcurrentParent.children.push(element); // 子元素\r\n\t\t}\r\n\t}\r\n\r\n\t// //文本\r\n\tfunction chars(text) {\r\n\t\ttext = text.trim();\r\n\t\tif(text){\r\n\t\t\tcurrentParent.children.push({\r\n\t\t\t\ttype:3,\r\n\t\t\t\ttext\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tfunction createASTElement(tagName, attrs) {\r\n\t\treturn {\r\n\t\t\ttag: tagName,\r\n\t\t\ttype: 1,\r\n\t\t\tchildren: [],\r\n\t\t\tattrs,\r\n\t\t\tparent: null,\r\n\t\t};\r\n\t}\r\n\r\n\t// html 存在一直执行 这里负责吧 html 处理成 ast 树 \r\n\twhile (html) {\r\n\t\tlet textEnd = html.indexOf(\"<\");\r\n\t\tif (textEnd == 0) {\r\n\t\t\t// 肯定是标签 处理开始\r\n\t\t\tlet startTagMatch = parseStartTag();\r\n\t\t\tif (startTagMatch) {\r\n\t\t\t\tstart(startTagMatch.tagName, startTagMatch.attrs);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t// 处理结束\r\n\t\t\tconst endTagMatch = html.match(endTag);\r\n\t\t\tif (endTagMatch) {\r\n\t\t\t\tadvance(endTagMatch[0].length);\r\n\t\t\t\tend(endTagMatch[1]);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet text;\r\n\t\t// 处理文本\r\n\t\tif (textEnd > 0) {\r\n\t\t\ttext = html.substring(0, textEnd);\r\n\t\t}\r\n\t\tif (text) {\r\n\t\t\tadvance(text.length);\r\n\t\t\tchars(text);\r\n\t\t}\r\n\t}\r\n\t// 截取字符串\r\n\tfunction advance(n) {\r\n\t\thtml = html.substring(n);\r\n\t}\r\n\r\n    // 处理自定义属性 和 tagName\r\n\tfunction parseStartTag() {\r\n\t\tconst start = html.match(startTagOpen);\r\n\t\tif (start) {\r\n\t\t\tconst match = {\r\n\t\t\t\ttagName: start[1], // 标签名\r\n\t\t\t\tattrs: [],\r\n\t\t\t};\r\n\t\t\tadvance(start[0].length);\r\n\t\t\tlet end;\r\n\t\t\tlet attr;\r\n\t\t\twhile (\r\n\t\t\t\t!(end = html.match(startTagClose)) &&\r\n\t\t\t\t(attr = html.match(attribute))\r\n\t\t\t) {\r\n\t\t\t\tmatch.attrs.push({\r\n\t\t\t\t\tname: attr[1],\r\n\t\t\t\t\tvalue: attr[3] || attr[4] || attr[5],\r\n\t\t\t\t});\r\n\t\t\t\tadvance(attr[0].length); // 去掉属性\r\n\t\t\t}\r\n\t\t\tif (end) {\r\n\t\t\t\tadvance(end[0].length);\r\n\t\t\t\treturn match;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn root;\r\n}\r\n","// ast 可以描述 dom css js (ast 描述代码)\r\n// 虚拟dom 只能描述 dom 层面不一样\r\nimport { generate } from \"./generate\";\r\nimport { parseHTML } from \"./parse\";\r\n\r\n\r\n// 转为 render 函数\r\nexport function compileToFunctions(template) {\r\n\t// 1. 需要将 html 转换成ast 抽象语法树\r\n\r\n\t// 前端要掌握的数据结构 (树)\r\n\tlet ast = parseHTML(template); //\r\n\t// 2. 需要将ast树重新生成 html\r\n\tlet code = generate(ast);\r\n\t// 将字符串变成函数 限制取值范围 通过 with 来进行取值 通过改变this 让这个函数内部获取到结果\r\n\tlet render = new Function(`with( this ){ return ${code} }`);\r\n\r\n\treturn render;\r\n\r\n}\r\n","export function proxy (vm , data , key) {\r\n    Object.defineProperty(vm , key , {\r\n        get(){\r\n            return vm[data][key];\r\n        },\r\n        set(newValue){\r\n            if(vm[data][key] === newValue) return;\r\n            vm[data][key] = newValue;\r\n        }\r\n    });\r\n}\r\n\r\nexport function defineProperty (target,key,value){\r\n    // 判断一个对象是否被观测过 ， 判断是否存在 __ob__\r\n    Object.defineProperty(target,key,{\r\n        enumerable:false ,// 不可枚举的 循环获取不到这个属性\r\n        configurable:false, // 不能修改\r\n        value\r\n    });\r\n}\r\n\r\nconst LIFECYCLE_HOOKS = [\r\n    'beforeCreate',\r\n    'created',\r\n    'beforeMount',\r\n    'mounted',\r\n    'beforeUpdate',\r\n    'updated',\r\n    'beforeDestroy',\r\n    'destroyed',\r\n]\r\n\r\nlet strats = {}\r\n\r\nstrats.components = function(parentVal,  childVal){\r\n    const res = Object.create(parentVal); // res.__prop__ = parentVal；\r\n    if(childVal){\r\n        for (const key in childVal) {\r\n            res[key] = childVal[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\n\r\nfunction mergeHook (parentValue , childValue) {\r\n    // 新的存在生命周期函数\r\n    if(childValue){\r\n        // 老的也存在\r\n        if(parentValue){\r\n            return parentValue.concat(childValue);\r\n        }else{\r\n            return [childValue];\r\n        }\r\n    }else{\r\n        return parentValue;\r\n    }\r\n}\r\n\r\nLIFECYCLE_HOOKS.forEach((hook) => {\r\n    strats[hook] = mergeHook;\r\n})\r\n\r\n// 合并方法\r\nexport function mergeOptions (parent , child) {\r\n    const options = {};\r\n\r\n    for (const key in parent) {\r\n        mergeFiled(key);\r\n    }\r\n\r\n    // 如果已经合并过了就不需要再合并\r\n    for (const key in child) {\r\n        if(!parent.hasOwnProperty(key)){\r\n            mergeFiled(key);\r\n        }\r\n    }\r\n    // 默认的合并策略\r\n    function mergeFiled (key) {\r\n        if(strats[key]){\r\n            return options[key] = strats[key](parent[key] , child[key]);\r\n        }\r\n        if(typeof parent[key] === 'object' && typeof child[key] === 'object'){\r\n            options[key] = {\r\n                ...parent[key],...child[key]\r\n            }\r\n        }else if(child[key] == null){\r\n            options[key] = parent[key];\r\n        }else {\r\n\r\n            if(child[key]){\r\n                options[key] = child[key];\r\n            }else{\r\n                options[key] = parent[key];\r\n            }\r\n        }\r\n\r\n    }\r\n    return options;\r\n}\r\n\r\n// nextTick 方法系列\r\n\r\nlet callbacks = [];\r\nlet panding = false;\r\nlet timerFunc ;\r\n\r\nfunction flushCallback(){\r\n    callbacks.forEach((cb) => cb()); // 依次执行 修改数据方法\r\n    // while(callbacks.length){    \r\n    //     let callback = callbacks.pop(0);\r\n    //     callback();\r\n    // }\r\n    panding = false; \r\n}\r\n\r\nexport function nextTick (callback){\r\n    callbacks.push(callback);\r\n    // vue3 的 nexTick 方法原理就是 Promise.resolve().then(); 没有处理兼容性问题\r\n    // Promise.resolve().then()\r\n\r\n    // 判断兼容性\r\n    if (Promise) {\r\n        timerFunc = () => {\r\n            Promise.resolve().then(flushCallback);\r\n        }\r\n    } else if (MutationObserver) { // MutationObserver  监控改变 异步更新\r\n        let observer = new MutationObserver(flushCallback);\r\n        let textNode = document.createTextNode(1);\r\n        observer.observe(textNode, { characterData: true });\r\n        timerFunc = () => {\r\n            textNode.textContent = 2;\r\n        }\r\n    } else if (setImmediate) {\r\n        timerFunc = () => {\r\n            setImmediate(flushCallback);\r\n        }\r\n    } else {\r\n        timerFunc = () => {\r\n            setTimeout(flushCallback);\r\n        }\r\n    }\r\n\r\n    if(!panding){\r\n        timerFunc();\r\n        panding = true;\r\n    }\r\n}\r\n\r\n// 判断标签是不是真实标签\r\nfunction makeMap (str) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true\r\n    }\r\n    return (key) => {\r\n        return map[key];\r\n    }\r\n}\r\n\r\nexport const isNonPhrasingTag = makeMap(\r\n    'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\r\n      'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\r\n      'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\r\n      'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\r\n      'title,tr,track,button'\r\n  )\r\n  ","\r\nlet id = 0;\r\nclass Dep {\r\n    constructor () {\r\n        this.subs = [];\r\n        this.id = id++;\r\n    }\r\n    depend(){\r\n        // this.subs.push(Dep.target);\r\n        Dep.target.addDep(this); // 让watcher 记住 dep 让dep 记住 watcher\r\n    }\r\n    notify(){\r\n        this.subs.forEach((watcher) => {\r\n            watcher.update();\r\n        });\r\n    }\r\n    addSub(watcher){\r\n        this.subs.push(watcher);\r\n    }\r\n}\r\n\r\nDep.target = null;\r\nlet stack = [];\r\n\r\nexport function pushTarget (watcher) {\r\n    Dep.target = watcher; //保留watcher\r\n    stack.push(watcher); // 有渲染watcher 还有 其它watcher\r\n}\r\n\r\nexport function popTarget () {\r\n    stack.pop();\r\n    Dep.target = stack[stack.length - 1];// 删除watcher\r\n}\r\n\r\n// 多对多 一个属性有一个dep  （dep 是 用来收集watcher的）\r\n// dep 可以存 多个 watcher \r\n//  一个watcher 可以 对应 多个 dep\r\n\r\nexport default Dep;\r\n","import { callHook } from \"../lifecycle\";\r\nimport { nextTick } from \"../utils\";\r\nimport { popTarget, pushTarget } from \"./dep\";\r\n\r\nlet id = 0;\r\n\r\nclass Watcher  {\r\n    constructor(vm , exproOrFn , callback , options) {\r\n        this.vm = vm;\r\n        this.exproOrFn = exproOrFn;\r\n        this.callback = callback;\r\n        this.options = options;\r\n        this.user = options.user; // 用户watcher\r\n        this.id = id++; //watcher 的唯一标识\r\n        this.deps = []; //记录dep\r\n        this.depsId = new Set();\r\n        this.lazy = options.lazy; // 如果watcher 的 lazy 存在 就是 计算属性\r\n        this.dirty = this.lazy; \r\n        // getter 更新函数\r\n        if(typeof exproOrFn == 'function'){\r\n            this.getter = exproOrFn;\r\n        }else{\r\n            // exproOrFn 可能是字符串 取值获取依赖收集\r\n            this.getter = function () { // 获取 属性 值\r\n                let path = exproOrFn.split('.');\r\n                let obj = vm;\r\n                for (let index = 0; index < path.length; index++) {\r\n                    obj = obj[path[index]] ;\r\n                }\r\n                return obj;\r\n            }\r\n        }\r\n        this.value = !this.lazy ? this.get() : void 0;\r\n    }\r\n    update(){\r\n        callHook(this.vm, 'beforeUpdate');\r\n        // 判断是否是计算属性的 watcher \r\n        if(this.lazy){\r\n            this.dirty = true; // 页面重新渲染 可以获取到最新的值\r\n        }else{\r\n            queueWatcher(this); // 批处理 ， 暂存 方法\r\n        }\r\n    }\r\n\r\n    get(){\r\n        // watch 先获取值 触发拦截 target 已存在当前 target \r\n        pushTarget(this); // 当前实例\r\n        let result = this.getter.call(this.vm); //渲染页面 获取值\r\n        popTarget();\r\n        return result;\r\n    }\r\n\r\n    addDep(dep){\r\n        let id = dep.id;\r\n        if(!this.depsId.has(id)){\r\n            this.deps.push(dep);\r\n            this.depsId.add(id);\r\n            dep.addSub(this);\r\n        }\r\n    }\r\n\r\n    run() {\r\n        let newValue = this.get();\r\n        let oldValue = this.value;\r\n        this.value = newValue; // 替换老值\r\n        if(this.user){\r\n            this.callback.call(this.vm , newValue , oldValue);\r\n        }\r\n    }\r\n\r\n    depend(){\r\n        // 通过watcher 找到所有的 的dep 让所有的 dep 记住这个渲染watcher\r\n        let index = this.deps.length;\r\n        while(index --){\r\n            this.deps[index].depend();\r\n        }\r\n    }\r\n\r\n    evaluate(){\r\n        // 调用 computed 的 函数 获取返回值\r\n       this.value = this.get();\r\n       this.dirty = false;\r\n    }\r\n}\r\n\r\n// 批处理代码\r\nlet  queue = []; // 需要批量更新的 watcher 存到队列中 \r\nlet has = {};\r\nlet panding = false;\r\n\r\n\r\nfunction flushSchedulerQueue (){\r\n    queue.forEach((watch) => {\r\n        watch.run();\r\n        if(!watch.user){\r\n            watch.callback();\r\n        }\r\n    });\r\n    queue = [];\r\n    has = {};\r\n    panding = false;\r\n}\r\n\r\nfunction queueWatcher(watcher) {\r\n    // 去重\r\n    if(!has[watcher.id]){\r\n        queue.push(watcher); // 存队列\r\n        has[watcher.id] = true;\r\n        if(!panding){\r\n            nextTick(flushSchedulerQueue);\r\n            panding = true;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Watcher;","\r\n// 将虚拟节点转换为真实节点\r\nexport function patch (oldVnode , vnode) {\r\n    // 如果是自定义组件 就是 不存在\r\n    if(!oldVnode){\r\n        return createEle(vnode); // 组件中的vnode\r\n    }\r\n    // 默认初始化时 是用虚拟节点 创建真实的节点\r\n    if(oldVnode.nodeType == 1){ \r\n        let el = createEle(vnode);\r\n        let parentEl = oldVnode.parentNode;\r\n        parentEl.insertBefore(el , oldVnode.nextSibling);\r\n        parentEl.removeChild(oldVnode); // 删除老的节点\r\n        return el;\r\n    }else{\r\n    // 更新时用老的虚拟节点 和新的 虚拟节点作对比 将不同的地方 更新真实dom \r\n        // 1. 比较两个 元数的 标签\r\n        if(oldVnode.tag !== vnode.tag){\r\n            return oldVnode.el.parentNode.replaceChild( createEle(vnode) , oldVnode.el ); // 不一样替换\r\n        }\r\n        // 2.标签一样 两个文本 虚拟节点的 tag 是相等的\r\n        if(!oldVnode.tag){ // 文本的比对\r\n            if(oldVnode.text !== vnode.text){\r\n                return oldVnode.el.textContent = vnode.text;\r\n            }\r\n        }\r\n\r\n        //3. 标签一样 并且需要开始比对标签属性和儿子了\r\n        // 标签可以直接复用\r\n        let el = vnode.el = oldVnode.el;\r\n\r\n        // 更新属性 用新的虚拟节点属性 和老的 比较 去更新节点 新老属性作对比\r\n        updatePropertions(vnode , oldVnode.data);\r\n\r\n\r\n\r\n        // 儿子的比较 步骤\r\n        let oldChildren = oldVnode.children || [];\r\n        let newChildren = vnode.children || [];\r\n        // 老的 有children 新的 也有 \r\n        if(oldChildren.length > 0 && newChildren.length > 0){\r\n            updateChildren(oldChildren , newChildren , el );\r\n        }else if(oldChildren.length > 0){   \r\n            // 新的没有 \r\n            el.innerHTML = '';\r\n        }else if(newChildren.length > 0){\r\n            // 老的没有\r\n            for (let index = 0; index < newChildren.length; index++) {\r\n                el.appendChild(createEle(newChildren[index]));\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nfunction isSameVnode(oldVnode , newVnode) {\r\n    return (oldVnode.tag == newVnode.tag) && (oldVnode.key == newVnode.key);\r\n}\r\n\r\n\r\n// 儿子的diff 比较\r\nfunction updateChildren (oldChildren , newChildren , parent){\r\n    // vue 中的diff 处理了很多优化\r\n\r\n    // 循环 同时循环老的和新的 那个先结束 循环就停止 将多的删除 或者添加\r\n\r\n    // 开头指针\r\n    let oldStartIndex = 0; // 老的索引\r\n    let oldStartVnode = oldChildren[0]; // 老的索引指向 的 节点\r\n    let oldEndIndex = oldChildren.length - 1;\r\n    let oldEndVnode = oldChildren[oldEndIndex]; \r\n\r\n    let newStartIndex = 0; // 新的索引\r\n    let newStartVnode = newChildren[0]; // 新的索引指向 的 节点\r\n    let newEndIndex = newChildren.length - 1;\r\n    let newEndVnode = newChildren[newEndIndex]; \r\n\r\n\r\n    let map = makeIndexbyKey(oldChildren);\r\n\r\n    // 比较谁先循环完 停止\r\n    while(oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex){    \r\n        if(!oldStartVnode){ \r\n            // oldStartVnode 当前值为null 跳过当次 \r\n            oldStartVnode = oldStartVnode[++oldStartIndex]; \r\n        }else if(!oldEndVnode) {\r\n            oldEndVnode = oldChildren[--oldEndIndex]; \r\n        }else\r\n        // 1. 老头部 和 新头去比较\r\n        if(isSameVnode(oldStartVnode , newStartVnode)){// 如果两个是 一样的 元素\r\n            patch(oldStartVnode ,newStartVnode ); //更新属性和再去递归更新子节点\r\n            oldStartVnode = oldChildren[++oldStartIndex];\r\n            newStartVnode = newChildren[++newStartIndex];\r\n        } else\r\n        // 2. 老尾部 和 新尾去比较\r\n        if(isSameVnode(oldEndVnode,newEndVnode)){\r\n            patch(oldEndVnode ,newEndVnode ); //更新属性和再去递归更新子节点\r\n            oldEndVnode = oldChildren[--oldEndIndex];\r\n            newEndVnode = newChildren[--newEndIndex];\r\n        }else \r\n        // 3. 老的头 和 新的尾去比\r\n        if(isSameVnode(oldStartVnode , newEndVnode)){\r\n            patch(oldStartVnode ,newEndVnode );\r\n            parent.insertBefore(oldStartVnode.el , oldEndVnode.el.nextSibling); // 插入 old 紧跟的下一个\r\n            oldStartVnode = oldChildren[++oldStartIndex];\r\n            newEndVnode = newChildren[--newEndIndex];\r\n        }else\r\n        // 4. 老的尾 和 新的头去比较\r\n        if(isSameVnode(oldEndVnode , newStartVnode)){\r\n            patch(oldEndVnode ,newStartVnode );\r\n            parent.insertBefore(oldEndVnode.el , oldStartVnode.el); // 插入 old 紧跟的下一个\r\n            oldEndVnode = oldChildren[--oldEndIndex];\r\n            newStartVnode = newChildren[++newStartIndex];\r\n        }\r\n        // 儿子之间没关系 暴力比对\r\n        else{\r\n            let moveIndex = map[newStartVnode.key]; // 拿倒开头的虚拟节点的key  去老的中找\r\n\r\n\r\n            // 不需要移动 没有复用的 key \r\n            if(moveIndex == undefined){\r\n                parent.insertBefore(createEle(newStartVnode) , oldStartVnode.el); // 插入 old 紧跟的下一个\r\n            }else{\r\n                let moveVNode = oldChildren[moveIndex]; // 这个老的虚拟节点需要移动 \r\n                oldChildren[moveIndex] = null;\r\n                parent.insertBefore(moveVNode.el , oldStartVnode.el); // 插入 old 紧跟的下一个\r\n                patch(moveVNode , newStartVnode); // 比较属性\r\n            }\r\n\r\n            newStartVnode = newChildren[++newStartIndex];\r\n        }\r\n    }   \r\n    if(newStartIndex <= newEndIndex){\r\n        // 当 oldStartIndex 或者 newStartIndex 循环结束得到结束往后的索引的值进行处理\r\n        for (let index = newStartIndex; index <= newEndIndex; index++) {\r\n            // parent.appendChild(createEle(newChildren[index]));\r\n            let ele = newChildren[newEndIndex + 1] == null ? null : newChildren[newEndIndex + 1].el;\r\n            parent.insertBefore(createEle(newChildren[index]) , ele);\r\n        }\r\n    }\r\n\r\n    // 老的节点剩余未处理的 说明 新的节点不存在 该节点 \r\n    if(oldStartIndex <= oldEndIndex){\r\n        for (let index = oldStartIndex; index <= oldEndIndex; index++) {\r\n            let child = oldChildren[index];\r\n            if(child != undefined) {\r\n                parent.removeChild(child.el);\r\n            }\r\n        }\r\n    }\r\n\r\n    // old key 映射表\r\n    function makeIndexbyKey (oldChildren) {\r\n        let map = {};\r\n        oldChildren.forEach((item , index) => {\r\n            if(item.key){\r\n                map[item.key] = index;\r\n            }\r\n        });\r\n        return map;\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction createComponent (vnode){\r\n    let i = vnode.data;\r\n    if( (i = i.hook) && (i = i.init)){ // i = init 方法\r\n        i(vnode);\r\n    }\r\n    if(vnode.componentInstance){\r\n        return true;\r\n    }\r\n}\r\n\r\n// 生成真实dom\r\nexport function createEle (vnode){\r\n    const {tag , data , children = [] , text} = vnode;\r\n    if( typeof tag === 'string'){\r\n        if(createComponent(vnode)){\r\n            return vnode.componentInstance.$el;\r\n        }\r\n        vnode.el = document.createElement(tag);\r\n        // 处理样式\r\n        updatePropertions(vnode);\r\n\r\n        children.forEach(element => {\r\n            vnode.el.appendChild(createEle(element));\r\n        });\r\n    } else {\r\n        vnode.el = document.createTextNode(text);\r\n    }\r\n    return vnode.el;\r\n}\r\n\r\n function updatePropertions (vnode ,oldProps = {}) {\r\n    const { el , data:newProps = {} } = vnode;\r\n\r\n    // 样式处理\r\n    let newStyle = newProps.style || {};\r\n    let oldStyle = oldProps.style || {};\r\n\r\n    // 老的有 新的没有\r\n    for (const key in oldProps) {\r\n        if(!newProps[key]){\r\n            el.removeAttribute(key); // 删除真实 dom 的属性\r\n        }\r\n    }\r\n\r\n    // 老的样式中有  新的没有  删除老的样式\r\n    for (const key in oldStyle) {\r\n        if(!newStyle[key]){\r\n            el.style[key] = ''; // 删除老的样式\r\n        }\r\n    }\r\n\r\n    for (const key in newProps) {\r\n        // 设置样式\r\n        if(key === 'style'){\r\n            for (const styleKey in newProps[key]) {\r\n                el.style[styleKey] = newProps[key][styleKey];\r\n            }\r\n        } else if(key === 'class'){\r\n            el.className = newProps[key];\r\n        }else{\r\n            el.setAttribute(key, newProps[key]);\r\n        }\r\n    }\r\n}\r\n\r\n// vue 渲染流程  1. 初始化数据  2. 模板编译  3. 生成 render 函数  4. 生成虚拟节点  5.生成真实节点  6.替换页面","import Watcher from './observer/watcher';\r\nimport { patch } from './vdom/patch';\r\n\r\nexport function lifecycleMixin (Vue) {\r\n    Vue.prototype._update = function (vnode) {\r\n        const vm =  this;\r\n        // 区分首次渲染还是更新\r\n        const prevVnode = vm._vnode;\r\n        console.log(vm.$el ,vnode);\r\n        if(!prevVnode){\r\n            vm.$el = patch(vm.$el , vnode);\r\n        }else{\r\n            // 替换旧的元素\r\n            vm.$el = patch(vm._vnode , vnode);\r\n        }\r\n        vm._vnode = vnode;\r\n    }\r\n}\r\n\r\n\r\nexport function mountComponent (vm,el) {\r\n    // 调用 render 方法 去渲染el 属性\r\n\r\n    callHook(vm , 'beforeMount'); // 渲染前生命周期\r\n\r\n    // 先调用render 方法 创建虚拟节点  在将虚拟节点 渲染到页面上\r\n\r\n    let updateComponent = function () {\r\n        vm._update(vm._render());\r\n    }\r\n\r\n    //初始化的时候 创建 watcher\r\n    new Watcher(vm , updateComponent , () => {\r\n        callHook(vm , 'updated'); // 更新生命周期\r\n    } , true );\r\n\r\n    callHook(vm , 'mounted'); // 渲染后生命周期\r\n}\r\n\r\n// 掉用生命周期\r\nexport function callHook (vm , hook) {\r\n    const handlers = vm.$options[hook];\r\n    if(handlers){\r\n        for (let index = 0; index < handlers.length; index++) {\r\n            handlers[index].call(vm);\r\n        }\r\n    }\r\n}","import { observer } from \"./index\";\r\n\r\n\r\n// 获取数组上的方法\r\nconst arrayProto = Array.prototype;\r\n\r\n// 继承该方法\r\nexport const arrayMethods = Object.create(arrayProto);\r\n\r\nconst methodsToPatch = [\r\n    'push',\r\n    'pop',\r\n    'shift',\r\n    'unshift',\r\n    'splice',\r\n    'sort',\r\n    'reverse'\r\n];\r\n\r\nmethodsToPatch.forEach((method) => {\r\n    // 新的方法\r\n    arrayMethods[method] = function (...args) {\r\n        // this 就是 observer里的value\r\n        const result = arrayProto[method].apply(this,args);\r\n        //\r\n        let inserted;\r\n        let ob = this.__ob__;\r\n\r\n        if(method === 'push' || method === 'unshift'){\r\n            inserted = args;\r\n        }\r\n        if(method === 'splice'){\r\n            inserted = args.slice(2);\r\n        }\r\n        if(inserted){\r\n            ob.observerArray(inserted);\r\n        }\r\n        ob.dep.notify(); // 通知数组依赖更新\r\n        return result;\r\n    }\r\n})                                        ","import { arrayMethods } from \"./array\";\r\nimport { defineProperty } from '../utils';\r\nimport Dep from \"./dep\";\r\nclass Observer {\r\n    constructor(value){\r\n        this.dep = new Dep();\r\n\r\n        // 设置 __ob__\r\n        defineProperty(value , '__ob__' , this);\r\n\r\n        // 使用defineProperty\r\n        if(Array.isArray(value)){\r\n            value.__proto__ = arrayMethods;\r\n            // 观测数组里的对象\r\n            this.observerArray(value);\r\n        }else{\r\n            this.walk(value);\r\n        }\r\n    }\r\n    walk(data){\r\n        let keys = Object.keys(data);\r\n        keys.forEach((key) => {\r\n            defineReactive(data , key , data[key]);\r\n        });\r\n    }\r\n    observerArray(value){\r\n        value.forEach((el) => {\r\n            observer(el);\r\n        });\r\n    }\r\n}\r\n\r\n// 数据劫持\r\nfunction defineReactive (data , key ,value) {\r\n\r\n    // 获取到数组的dep\r\n    let childDep = observer(value); // 判断当前的值如果为对象就再次进行递归\r\n\r\n    let dep = new Dep(); //每一个属性都有 一个dep\r\n\r\n    // 当页面取值 说明这个值用来渲染了 将属性和watcher 对应起来\r\n    Object.defineProperty(data , key ,{\r\n        get(){\r\n            if(Dep.target) { // 让属性记住 watcher 依赖收集\r\n                dep.depend();\r\n                if(childDep){\r\n                    // 给数组添加了dep 属性 \r\n                    childDep.dep.depend();\r\n                }\r\n            }\r\n            return value\r\n        },\r\n        set(newValue){\r\n            if(newValue === value) return ;\r\n            observer(newValue);  // 如果用户将值改为对象 继续监控\r\n            value = newValue;\r\n            dep.notify(); // 依赖更新\r\n        }\r\n    });\r\n}\r\n\r\nexport function observer (data) {\r\n    if(typeof data !== 'object' || data === null){\r\n        return\r\n    }\r\n    if(data.__ob__){\r\n        return\r\n    }\r\n    return new Observer(data);\r\n}","import Dep from \"./observer/dep\";\r\nimport { observer } from \"./observer/index\";\r\nimport Watcher from \"./observer/watcher\";\r\nimport { nextTick, proxy } from './utils';\r\n\r\nexport function initSatte (vm) {\r\n    const opts = vm.$options;\r\n    if(opts.props){\r\n        initProps(vm);\r\n    }\r\n    if(opts.methods){\r\n        initMethods(vm);\r\n    }\r\n    if(opts.data){\r\n        initData(vm);\r\n    }\r\n    if(opts.computed){\r\n        initComputed(vm);\r\n    }\r\n    if(opts.watch){\r\n        initWatch(vm);\r\n    }\r\n}\r\n\r\nfunction initData (vm) {\r\n    let data = vm.$options.data;\r\n    vm._data = data = typeof data === 'function' ? data.call(vm) : data;\r\n    // 数据的劫持方案\r\n    observer(data);\r\n\r\n    // 代理\r\n    for (const key in data) {\r\n        proxy(vm,'_data',key);\r\n    }\r\n}\r\n\r\nfunction initProps () {\r\n\r\n}\r\nfunction initMethods (vm) {\r\n    let methods = vm.$options.methods;\r\n    for (const key in methods) {\r\n       vm[key] = typeof methods[key] !== 'function' ? function () {} : bind(methods[key],vm);\r\n    }\r\n}\r\n\r\n// window.addEventListener('resize', this.run); 会丢失this指向\r\nfunction bind(callback , vm){\r\n    return callback.bind(vm);\r\n}\r\n\r\n// 处理计算属性\r\nfunction initComputed (vm) {\r\n    let computed = vm.$options.computed;\r\n    // 1. 需要有watcher 2.还需要通过defineProperty 3. dirty 控制执行\r\n    const watchers = vm._computedWatchers = {}; // 用来存放计算属性的 watcher \r\n\r\n    for (const key in computed) {\r\n        const userDef = computed[key];\r\n        const getter = typeof userDef === 'function' ? userDef : userDef.get; // watcher 使用\r\n        watchers[key] = new Watcher(vm , getter , () => {} , { lazy : true }); // 计算属性的watcher\r\n        defineComputed(vm , key , userDef);\r\n    }\r\n}\r\n\r\nfunction defineComputed (target , key , userDef){\r\n    let sharedPropertyDefinition = {\r\n        enumerable:true,\r\n        configurable:true,\r\n        get:() => {},\r\n        set:() => {}\r\n    };\r\n    if(typeof userDef === 'function'){\r\n        sharedPropertyDefinition.get = createComptedGetter( key );\r\n    }else{\r\n        sharedPropertyDefinition.get = createComptedGetter( key ); //需要加缓存\r\n        sharedPropertyDefinition.set = userDef.set;\r\n    }\r\n    Object.defineProperty(target , key ,sharedPropertyDefinition );\r\n}\r\n\r\nfunction createComptedGetter (key){\r\n    // 此方法是包装的计算属性方法 每次获取值调用 判断要不要执行用户传递的方法\r\n    return function () {\r\n        // 执行\r\n        const watcher = this._computedWatchers[key]; //获取属性对应的 watcher\r\n        if(watcher){\r\n            if(watcher.dirty){\r\n                watcher.evaluate(); // 对当前的  watcher 进行求值\r\n            }\r\n            if(Dep.target){\r\n                watcher.depend();\r\n            }\r\n            return watcher.value; // 默认返回 watcher 的value 的值\r\n        }\r\n    }\r\n}\r\n\r\n// 获取watch 里面的值 \r\nfunction initWatch (vm) {\r\n    let watch =  vm.$options.watch;\r\n    for (let key in watch) {\r\n        const handler = watch[key]; // 获取值内容\r\n        if(Array.isArray(handler)){\r\n            handler.forEach((hand) => {\r\n                createWatcher(vm , key , hand );\r\n            })\r\n        }else {\r\n            createWatcher(vm , key , handler );\r\n        }\r\n    }\r\n}\r\n\r\n// 获取watch 值触发 $watch\r\nfunction createWatcher (vm , exprOrFunction , handler , options = {}) { // options 用来标识用户watcher\r\n    if(typeof handler == 'object'){\r\n        options = options; \r\n        handler = handler.handler;\r\n    }\r\n    if(typeof handler == 'string'){\r\n        handler = vm[handler];\r\n    }\r\n\r\n    return vm.$watch(exprOrFunction , handler , options);\r\n}\r\n\r\n\r\nexport function stateMixin (Vue){\r\n    Vue.prototype.$nextTick = function(callback) {\r\n        nextTick(callback);\r\n    }\r\n    Vue.prototype.$watch = function(exprOrFunction, callback , options) {\r\n        // 数据应该依赖 这个 watcher 数据变化执行\r\n        let watcher = new Watcher(this,exprOrFunction, callback , { ...options , user:true });\r\n        if(options.immediate){\r\n            callback();\r\n        }\r\n    }\r\n}","import { compileToFunctions } from './compile/index';\r\nimport {\r\n  callHook,\r\n  mountComponent,\r\n} from './lifecycle';\r\nimport { initSatte } from './state';\r\nimport { mergeOptions } from './utils';\r\n\r\nexport function initMixin(Vue) {\r\n\t//入口 初始化方法\r\n\tVue.prototype._init = function (options) {\r\n\t\tconst vm = this;\r\n\r\n\t\t// 将用户传递的 全局 mixin 合并\r\n\t\tvm.$options = mergeOptions( vm.constructor.options ,options);\r\n\r\n\t\tcallHook(vm , 'beforeCreate'); // 初始前生命周期\r\n\r\n\t\tinitSatte(vm); // 初始化状态\r\n\r\n\t\tcallHook(vm , 'created'); // 初始化状态生命周期\r\n\t\t// vue 响应数据的变化 讲将数据作一个初始化的劫持 （数据改变时改变视图）\r\n\r\n\t\t// 默认 如果当前有el属性 就渲染模板\r\n\t\tif (vm.$options.el) {\r\n\t\t\tvm.$mount(vm.$options.el);\r\n\t\t}\r\n\t};\r\n\tVue.prototype.$mount = function (el) {\r\n\t\t// 1 获取el dom\r\n\t\t// 2 判断如果没有 render\r\n\t\t// 3 没render 就 将 template 转为 render\r\n\r\n\t\t// 挂载\r\n\t\tconst vm = this;\r\n\r\n\t\t\r\n\t\t// 1 获取el dom\r\n\t\tel = document.querySelector(el);\r\n\t\tvm.$el = el;\r\n\t\t// 2 判断如果没有 render\r\n\t\tif (!vm.$options.render) {\r\n\t\t\t// 3 没render 就 将 template 转为 render\r\n\t\t\tlet template = vm.$options.template;\r\n\t\t\tif (!template && el) {\r\n\t\t\t\ttemplate = el.outerHTML;\r\n\t\t\t}\r\n\t\t\t// 将模板转换为 render 函数 就是 ast 虚拟dom树 最总渲染时用的都是render方法\r\n\t\t\tconst render = compileToFunctions(template);\r\n\t\t\tconsole.log(render);\r\n\t\t\tvm.$options.render = render;\r\n\t\t}\r\n\r\n\t\t// 需要挂载这个元素\r\n\t\tmountComponent(vm,el);\r\n\r\n\t};\r\n}\r\n","import { mergeOptions } from '../utils';\r\n\r\nexport function initExtend (Vue) {\r\n    let cid = 0;\r\n    Vue.extend = function (extendOptions) {\r\n        const Super = this;\r\n        const sub = function vueComponent (options) {\r\n            this._init(options);\r\n        }\r\n        sub.cid = cid++;\r\n        // 子类要继承父类的原型方法\r\n        sub.prototype = Object.create(Super.prototype);\r\n        sub.prototype.constructor = sub;\r\n        \r\n        sub.options = mergeOptions(Super.options , extendOptions);\r\n        sub.component = Super.component;\r\n        return sub;\r\n    }\r\n}\r\n\r\n\r\n// 组件的渲染流程\r\n\r\n// 1. 调用 Vue.componen\r\n// 2. 用Vue.extend 创建一个子类继承父类\r\n// 3. 创建子类的实例时 会调用父类的init 方法 再去 $mount\r\n// 4. 组件的初始化 实际上就是 new 这个组件的构造函数 并且 调用 $mount 方法\r\n// 5. 创建虚拟节点 根据标签名找到对应组件 ， 生成虚拟节点 \r\n// 6. 组件创建真实dom时 ， 先渲染的是父组件 遇到是组件的虚拟节点时 调用 init 方法 让组件初始化 并挂载 \r\n// 组件的 $mount 不 传参数 会把渲染后的dom 放到vm.$el 上 => vnode.componentInstance 上 这样渲染时就会获取对象 的 $el 属性来渲染","import { mergeOptions } from '../utils'\r\nimport { initExtend } from './extend';\r\n\r\nexport function initGlobalApi (Vue){\r\n    // 整合了 全局api\r\n    Vue.options = {};\r\n\r\n    // 生命周期的合并策略 [beforeCreated,beforeCreated]\r\n    Vue.mixin = function (mixin) {\r\n        // 如何实现两个对象的合并\r\n        this.options = mergeOptions(this.options , mixin);\r\n    }\r\n\r\n    Vue.options._base = Vue; //vue的构造函数\r\n    Vue.options.components = {};\r\n\r\n    initExtend(Vue);\r\n\r\n    // 注册组件\r\n    Vue.component = function (id , definition) {\r\n        definition.name = definition.name || id; //默认属性名\r\n        // 用的时候 需要 new  definition.$mount\r\n        definition = this.options._base.extend(definition);\r\n        Vue.options.components[id] = definition;\r\n    }\r\n}","import { isNonPhrasingTag } from '../utils';\r\n\r\nexport function renderMinin (Vue){\r\n    // 虚拟节点 用1对象来描述dom\r\n    Vue.prototype._v = function (text) {\r\n        return createTextVNode(text); // 虚拟文本\r\n    }\r\n    Vue.prototype._c = function () {\r\n        return createElement(this,...arguments); // 虚拟节点\r\n    }\r\n    // 如果是对象会对对象进行取值\r\n    Vue.prototype._s = function (val) {\r\n        return val == null ? \"\" : (typeof val == 'object') ? JSON.stringify(val) : val;\r\n    }\r\n    Vue.prototype._render = function () {\r\n        const vm = this;\r\n        const render = vm.$options.render;\r\n        let vnode = render.call(this);\r\n        return vnode;\r\n    }\r\n}\r\n\r\n\r\nfunction createElement (vm,tag , data = {} , ...children) {\r\n    // 判断如果传入的是组件 我需要 new 当前组件的构造函数\r\n    if(isNonPhrasingTag(tag)){\r\n        return vnode(tag , data , data.key ,children);\r\n    }else{\r\n        let Ctor = vm.$options.components[tag];\r\n        return createComponent(vm,tag , data , data.key ,children,Ctor);\r\n    }\r\n}\r\nfunction createComponent (vm,tag , data , key ,children,Ctor){\r\n    let barseCtor = vm.$options._base;\r\n    // 有可能是对象 也有可能是 函数\r\n    if(typeof Ctor == \"object\"){\r\n        Ctor = barseCtor.extend(Ctor);\r\n    }\r\n    // 给组件添加生命周期\r\n    data.hook = {\r\n        init(vnode){\r\n            let child = vnode.componentInstance = new Ctor({});\r\n            child.$mount(); // 挂载逻辑 组件的 $mount 方法是不传递参数的\r\n        }\r\n    }\r\n    return vnode(`vue-component-${Ctor.cid}-${tag}`,data , key , undefined ,undefined,{ Ctor , children });\r\n}\r\n\r\nfunction createTextVNode (text) {\r\n    return vnode(undefined, undefined , undefined ,undefined , text);\r\n}\r\n\r\n// 用来产生虚拟dom\r\nfunction vnode ( tag , data , key ,children , text , componentOptions ){\r\n    // componentOptions 用来保存组件的 构造函数 和插槽\r\n    return {  tag , data , key ,children , text , componentOptions };\r\n}","import { initMixin } from './init';\r\nimport { initGlobalApi } from './global-api/index';\r\nimport { lifecycleMixin } from './lifecycle';\r\nimport { renderMinin } from './vdom/index';\r\nimport { stateMixin } from './state';\r\n// 写 vue\r\n\r\n\r\n\r\n// 第一波 创建 vue 类 es5\r\nfunction Vue (options) {\r\n    this._init(options); //入口 组件初始化入口\r\n}\r\n\r\n\r\n// 写成一个个的插件 对 原型进行扩展\r\ninitMixin(Vue); // init 方法\r\nlifecycleMixin(Vue); //混合生命周期 渲染 _update\r\nrenderMinin(Vue); // _render\r\nstateMixin(Vue);\r\n\r\n// 初始化全局pi \r\ninitGlobalApi(Vue);\r\n\r\n// 为了看到diff的整个流程 创建1两个虚拟节点进行比对\r\n// import { compileToFunctions } from './compile/index'; \r\n// import { createEle , patch } from './vdom/patch';\r\n\r\n// let render1 = compileToFunctions('<div id=\"a\" style=\"background:red\" class=\"2\"><li key=\"li\">1</li><li key=\"li222\">2</li><span key=\"span\" style=\"color:#fff;\">我是傻逼</span><li key=\"li222222\">3</li></div>');\r\n// let vnode1 = render1.call(new Vue({ data:{ name:'我是' } }));\r\n// document.body.appendChild(createEle(vnode1))\r\n\r\n// let render2 = compileToFunctions('<div id=\"b\" style=\"background:pink\"><li key=\"li222222\">3</li><span key=\"span\" style=\"color:#fff;\">我是傻逼</span><li key=\"li\">1</li><div key=\"div\">divdiv</div></div>');\r\n// let vnode2 = render2.call(new Vue({ data:{ name:'我是傻逼' } }));\r\n\r\n// setTimeout(() => patch(vnode1 ,vnode2 ) ,2000)\r\nexport default Vue;"],"names":["defaultTagRE","genProps","attrs","str","index","length","attr","name","obj","value","split","forEach","element","key","JSON","stringify","slice","gen","node","type","generate","text","test","tokens","lastIndex","match","exec","push","trim","join","genChildren","children","map","child","ast","code","tag","ncname","qnameCapture","startTagOpen","RegExp","endTag","startTagClose","attribute","parseHTML","html","root","currentParent","stack","start","tagName","createASTElement","end","pop","parent","chars","textEnd","indexOf","startTagMatch","parseStartTag","endTagMatch","advance","substring","n","compileToFunctions","template","render","Function","proxy","vm","data","Object","defineProperty","get","set","newValue","target","enumerable","configurable","LIFECYCLE_HOOKS","strats","components","parentVal","childVal","res","create","mergeHook","parentValue","childValue","concat","hook","mergeOptions","options","mergeFiled","hasOwnProperty","_objectSpread","callbacks","panding","timerFunc","flushCallback","cb","nextTick","callback","Promise","resolve","then","MutationObserver","observer","textNode","document","createTextNode","observe","characterData","textContent","setImmediate","setTimeout","makeMap","list","i","isNonPhrasingTag","id","Dep","subs","addDep","watcher","update","pushTarget","popTarget","Watcher","exproOrFn","user","deps","depsId","Set","lazy","dirty","getter","path","callHook","queueWatcher","result","call","dep","has","add","addSub","oldValue","depend","queue","flushSchedulerQueue","watch","run","patch","oldVnode","vnode","createEle","nodeType","el","parentEl","parentNode","insertBefore","nextSibling","removeChild","replaceChild","updatePropertions","oldChildren","newChildren","updateChildren","innerHTML","appendChild","isSameVnode","newVnode","oldStartIndex","oldStartVnode","oldEndIndex","oldEndVnode","newStartIndex","newStartVnode","newEndIndex","newEndVnode","makeIndexbyKey","moveIndex","undefined","moveVNode","ele","item","createComponent","init","componentInstance","$el","createElement","oldProps","newProps","newStyle","style","oldStyle","removeAttribute","styleKey","className","setAttribute","lifecycleMixin","Vue","prototype","_update","prevVnode","_vnode","console","log","mountComponent","updateComponent","_render","handlers","$options","arrayProto","Array","arrayMethods","methodsToPatch","method","args","apply","inserted","ob","__ob__","observerArray","notify","Observer","isArray","__proto__","walk","keys","defineReactive","childDep","initSatte","opts","props","methods","initMethods","initData","computed","initComputed","initWatch","_data","bind","watchers","_computedWatchers","userDef","defineComputed","sharedPropertyDefinition","createComptedGetter","evaluate","handler","hand","createWatcher","exprOrFunction","$watch","stateMixin","$nextTick","immediate","initMixin","_init","constructor","$mount","querySelector","outerHTML","initExtend","cid","extend","extendOptions","Super","sub","vueComponent","component","initGlobalApi","mixin","_base","definition","renderMinin","_v","createTextVNode","_c","arguments","_s","val","Ctor","barseCtor","componentOptions"],"mappings":"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"}