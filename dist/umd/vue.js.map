{"version":3,"file":"vue.js","sources":["../../src/observer/array.js","../../src/utils.js","../../src/observer/dep.js","../../src/observer/index.js","../../src/vdom/patch.js","../../src/lifecycle.js","../../src/observer/watcher.js","../../src/state.js","../../src/compile/generate.js","../../src/compile/parse.js","../../src/compile/index.js","../../src/init.js","../../src/global-api/index.js","../../src/vdom/index.js","../../src/index.js"],"sourcesContent":["import { observer } from \"./index\";\r\n\r\n\r\n// 获取数组上的方法\r\nconst arrayProto = Array.prototype;\r\n\r\n// 继承该方法\r\nexport const arrayMethods = Object.create(arrayProto);\r\n\r\nconst methodsToPatch = [\r\n    'push',\r\n    'pop',\r\n    'shift',\r\n    'unshift',\r\n    'splice',\r\n    'sort',\r\n    'reverse'\r\n];\r\n\r\nmethodsToPatch.forEach((method) => {\r\n    // 新的方法\r\n    arrayMethods[method] = function (...args) {\r\n        // this 就是 observer里的value\r\n        const result = arrayProto[method].apply(this,args);\r\n        //\r\n        let inserted;\r\n        let ob = this.__ob__;\r\n\r\n        if(method === 'push' || method === 'unshift'){\r\n            inserted = args;\r\n        }\r\n        if(method === 'splice'){\r\n            inserted = args.slice(2);\r\n        }\r\n        if(inserted){\r\n            ob.observerArray(inserted);\r\n        }\r\n        ob.dep.notify(); // 通知数组依赖更新\r\n        return result;\r\n    }\r\n})                                        ","export function proxy (vm , data , key) {\r\n    Object.defineProperty(vm , key , {\r\n        get(){\r\n            return vm[data][key];\r\n        },\r\n        set(newValue){\r\n            if(vm[data][key] === newValue) return;\r\n            vm[data][key] = newValue;\r\n        }\r\n    });\r\n}\r\n\r\nexport function defineProperty (target,key,value){\r\n    // 判断一个对象是否被观测过 ， 判断是否存在 __ob__\r\n    Object.defineProperty(target,key,{\r\n        enumerable:false ,// 不可枚举的 循环获取不到这个属性\r\n        configurable:false, // 不能修改\r\n        value\r\n    });\r\n}\r\n\r\nconst LIFECYCLE_HOOKS = [\r\n    'beforeCreate',\r\n    'created',\r\n    'beforeMount',\r\n    'mounted',\r\n    'beforeUpdate',\r\n    'updated',\r\n    'beforeDestroy',\r\n    'destroyed',\r\n]\r\n\r\nlet strats = {\r\n\r\n}\r\n\r\nfunction mergeHook (parentValue , childValue) {\r\n    // 新的存在生命周期函数\r\n    if(childValue){\r\n        // 老的也存在\r\n        if(parentValue){\r\n            return parentValue.concat(childValue);\r\n        }else{\r\n            return [childValue];\r\n        }\r\n    }else{\r\n        return parentValue;\r\n    }\r\n}\r\n\r\nLIFECYCLE_HOOKS.forEach((hook) => {\r\n    strats[hook] = mergeHook;\r\n})\r\n\r\n// 合并方法\r\nexport function mergeOptions (parent , child) {\r\n    const options = {};\r\n\r\n    for (const key in parent) {\r\n        mergeFiled(key);\r\n    }\r\n\r\n    // 如果已经合并过了就不需要再合并\r\n    for (const key in child) {\r\n        if(!parent.hasOwnProperty(key)){\r\n            mergeFiled(key);\r\n        }\r\n    }\r\n    // 默认的合并策略\r\n    function mergeFiled (key) {\r\n        if(strats[key]){\r\n            return options[key] = strats[key](parent[key] , child[key]);\r\n        }\r\n        if(typeof parent[key] === 'object' && typeof child[key] === 'object'){\r\n            options[key] = {\r\n                ...parent[key],...child[key]\r\n            }\r\n        }else if(child[key] == null){\r\n            options[key] = parent[key];\r\n        }else {\r\n            options[key] = child[key];\r\n        }\r\n\r\n    }\r\n    return options;\r\n}\r\n\r\n// nextTick 方法系列\r\n\r\nlet callbacks = [];\r\nlet panding = false;\r\nlet timerFunc ;\r\n\r\nfunction flushCallback(){\r\n    callbacks.forEach((cb) => cb()); // 依次执行 修改数据方法\r\n    // while(callbacks.length){    \r\n    //     let callback = callbacks.pop(0);\r\n    //     callback();\r\n    // }\r\n    panding = false; \r\n}\r\n\r\nexport function nextTick (callback){\r\n    callbacks.push(callback);\r\n    // vue3 的 nexTick 方法原理就是 Promise.resolve().then(); 没有处理兼容性问题\r\n    // Promise.resolve().then()\r\n\r\n    // 判断兼容性\r\n    if (Promise) {\r\n        timerFunc = () => {\r\n            Promise.resolve().then(flushCallback);\r\n        }\r\n    } else if (MutationObserver) { // MutationObserver  监控改变 异步更新\r\n        let observer = new MutationObserver(flushCallback);\r\n        let textNode = document.createTextNode(1);\r\n        observer.observe(textNode, { characterData: true });\r\n        timerFunc = () => {\r\n            textNode.textContent = 2;\r\n        }\r\n    } else if (setImmediate) {\r\n        timerFunc = () => {\r\n            setImmediate(flushCallback);\r\n        }\r\n    } else {\r\n        timerFunc = () => {\r\n            setTimeout(flushCallback);\r\n        }\r\n    }\r\n\r\n    if(!panding){\r\n        timerFunc();\r\n        panding = true;\r\n    }\r\n}","\r\nlet id = 0;\r\nclass Dep {\r\n    constructor () {\r\n        this.subs = [];\r\n        this.id = id++;\r\n    }\r\n    depend(){\r\n        // this.subs.push(Dep.target);\r\n        Dep.target.addDep(this); // 让watcher 记住 dep 让dep 记住 watcher\r\n    }\r\n    notify(){\r\n        console.log(this.subs);\r\n        this.subs.forEach((watcher) => {\r\n            watcher.update();\r\n        });\r\n    }\r\n    addSub(watcher){\r\n        this.subs.push(watcher);\r\n    }\r\n}\r\n\r\n\r\nexport function pushTarget (watcher) {\r\n    Dep.target = watcher; //保留watcher\r\n}\r\n\r\nexport function popTarget () {\r\n    Dep.target = null;// 删除watcher\r\n}\r\n\r\n// 多对多 一个属性有一个dep  （dep 是 用来收集watcher的）\r\n// dep 可以存 多个 watcher \r\n//  一个watcher 可以 对应 多个 dep\r\n\r\nexport default Dep;\r\n","import { arrayMethods } from \"./array\";\r\nimport { defineProperty } from '../utils';\r\nimport Dep from \"./dep\";\r\nclass Observer {\r\n    constructor(value){\r\n        this.dep = new Dep();\r\n\r\n        // 设置 __ob__\r\n        defineProperty(value , '__ob__' , this);\r\n\r\n        // 使用defineProperty\r\n        if(Array.isArray(value)){\r\n            value.__proto__ = arrayMethods;\r\n            // 观测数组里的对象\r\n            this.observerArray(value);\r\n        }else{\r\n            this.walk(value);\r\n        }\r\n    }\r\n    walk(data){\r\n        let keys = Object.keys(data);\r\n        keys.forEach((key) => {\r\n            defineReactive(data , key , data[key]);\r\n        });\r\n    }\r\n    observerArray(value){\r\n        value.forEach((el) => {\r\n            observer(el);\r\n        });\r\n    }\r\n}\r\n\r\n// 数据劫持\r\nfunction defineReactive (data , key ,value) {\r\n\r\n    // 获取到数组的dep\r\n    let childDep = observer(value); // 判断当前的值如果为对象就再次进行递归\r\n\r\n    let dep = new Dep(); //每一个属性都有 一个dep\r\n\r\n    // 当页面取值 说明这个值用来渲染了 将属性和watcher 对应起来\r\n    Object.defineProperty(data , key ,{\r\n        get(){\r\n            if(Dep.target) { // 让属性记住 watcher 依赖收集\r\n                dep.depend();\r\n                if(childDep){\r\n                    // 给数组添加了dep 属性 \r\n                    childDep.dep.depend();\r\n                }\r\n            }\r\n            return value\r\n        },\r\n        set(newValue){\r\n            if(newValue === value) return ;\r\n            observer(newValue);  // 如果用户将值改为对象 继续监控\r\n            value = newValue;\r\n            console.log(key , value , dep);\r\n            dep.notify(); // 依赖更新\r\n        }\r\n    });\r\n}\r\n\r\nexport function observer (data) {\r\n    if(typeof data !== 'object' || data === null){\r\n        return\r\n    }\r\n    if(data.__ob__){\r\n        return\r\n    }\r\n    return new Observer(data);\r\n}","\r\n// 将虚拟节点转换为真实节点\r\nexport function patch (oldVnode , vnode) {\r\n    // 默认初始化时 是用虚拟节点 创建真实的节点\r\n    if(oldVnode.nodeType == 1){ \r\n        let el = createEle(vnode);\r\n        let parentEl = oldVnode.parentNode;\r\n        parentEl.insertBefore(el , oldVnode.nextSibling);\r\n        parentEl.removeChild(oldVnode); // 删除老的节点\r\n        return el;\r\n    }else{\r\n    // 更新时用老的虚拟节点 和新的 虚拟节点作对比 将不同的地方 更新真实dom \r\n        // 1. 比较两个 元数的 标签\r\n        if(oldVnode.tag !== vnode.tag){\r\n            return oldVnode.el.parentNode.replaceChild( createEle(vnode) , oldVnode.el ); // 不一样替换\r\n        }\r\n        // 2.标签一样 两个文本 虚拟节点的 tag 是相等的\r\n        if(!oldVnode.tag){ // 文本的比对\r\n            if(oldVnode.text !== vnode.text){\r\n                return oldVnode.el.textContent = vnode.text;\r\n            }\r\n        }\r\n\r\n        //3. 标签一样 并且需要开始比对标签属性和儿子了\r\n        // 标签可以直接复用\r\n        let el = vnode.el = oldVnode.el;\r\n\r\n        // 更新属性 用新的虚拟节点属性 和老的 比较 去更新节点 新老属性作对比\r\n        updatePropertions(vnode , oldVnode.data);\r\n\r\n\r\n\r\n        // 儿子的比较 步骤\r\n        let oldChildren = oldVnode.children || [];\r\n        let newChildren = vnode.children || [];\r\n        // 老的 有children 新的 也有 \r\n        if(oldChildren.length > 0 && newChildren.length > 0){\r\n            updateChildren(oldChildren , newChildren , el );\r\n        }else if(oldChildren.length > 0){   \r\n            // 新的没有 \r\n            el.innerHTML = '';\r\n        }else if(newChildren.length > 0){\r\n            // 老的没有\r\n            for (let index = 0; index < newChildren.length; index++) {\r\n                el.appendChild(createEle(newChildren[index]));\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nfunction isSameVnode(oldVnode , newVnode) {\r\n    return (oldVnode.tag == newVnode.tag) && (oldVnode.key == newVnode.key);\r\n}\r\n\r\n\r\n// 儿子的diff 比较\r\nfunction updateChildren (oldChildren , newChildren , parent){\r\n    // vue 中的diff 处理了很多优化\r\n\r\n    // 循环 同时循环老的和新的 那个先结束 循环就停止 将多的删除 或者添加\r\n\r\n    // 开头指针\r\n    let oldStartIndex = 0; // 老的索引\r\n    let oldStartVnode = oldChildren[0]; // 老的索引指向 的 节点\r\n    let oldEndIndex = oldChildren.length - 1;\r\n    let oldEndVnode = oldChildren[oldEndIndex]; \r\n\r\n    let newStartIndex = 0; // 新的索引\r\n    let newStartVnode = newChildren[0]; // 新的索引指向 的 节点\r\n    let newEndIndex = newChildren.length - 1;\r\n    let newEndVnode = newChildren[newEndIndex]; \r\n\r\n\r\n    let map = makeIndexbyKey(oldChildren);\r\n\r\n    // 比较谁先循环完 停止\r\n    while(oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex){    \r\n        if(!oldStartVnode){ \r\n            // oldStartVnode 当前值为null 跳过当次 \r\n            oldStartVnode = oldStartVnode[++oldStartIndex]; \r\n        }else if(!oldEndVnode) {\r\n            oldEndVnode = oldChildren[--oldEndIndex]; \r\n        }else\r\n        // 1. 老头部 和 新头去比较\r\n        if(isSameVnode(oldStartVnode , newStartVnode)){// 如果两个是 一样的 元素\r\n            patch(oldStartVnode ,newStartVnode ); //更新属性和再去递归更新子节点\r\n            oldStartVnode = oldChildren[++oldStartIndex];\r\n            newStartVnode = newChildren[++newStartIndex];\r\n        } else\r\n        // 2. 老尾部 和 新尾去比较\r\n        if(isSameVnode(oldEndVnode,newEndVnode)){\r\n            patch(oldEndVnode ,newEndVnode ); //更新属性和再去递归更新子节点\r\n            oldEndVnode = oldChildren[--oldEndIndex];\r\n            newEndVnode = newChildren[--newEndIndex];\r\n        }else \r\n        // 3. 老的头 和 新的尾去比\r\n        if(isSameVnode(oldStartVnode , newEndVnode)){\r\n            patch(oldStartVnode ,newEndVnode );\r\n            parent.insertBefore(oldStartVnode.el , oldEndVnode.el.nextSibling); // 插入 old 紧跟的下一个\r\n            oldStartVnode = oldChildren[++oldStartIndex];\r\n            newEndVnode = newChildren[--newEndIndex];\r\n        }else\r\n        // 4. 老的尾 和 新的头去比较\r\n        if(isSameVnode(oldEndVnode , newStartVnode)){\r\n            patch(oldEndVnode ,newStartVnode );\r\n            parent.insertBefore(oldEndVnode.el , oldStartVnode.el); // 插入 old 紧跟的下一个\r\n            oldEndVnode = oldChildren[--oldEndIndex];\r\n            newStartVnode = newChildren[++newStartIndex];\r\n        }\r\n        // 儿子之间没关系 暴力比对\r\n        else{\r\n            let moveIndex = map[newStartVnode.key]; // 拿倒开头的虚拟节点的key  去老的中找\r\n\r\n\r\n            // 不需要移动 没有复用的 key \r\n            if(moveIndex == undefined){\r\n                parent.insertBefore(createEle(newStartVnode) , oldStartVnode.el); // 插入 old 紧跟的下一个\r\n            }else{\r\n                let moveVNode = oldChildren[moveIndex]; // 这个老的虚拟节点需要移动 \r\n                oldChildren[moveIndex] = null;\r\n                parent.insertBefore(moveVNode.el , oldStartVnode.el); // 插入 old 紧跟的下一个\r\n                patch(moveVNode , newStartVnode); // 比较属性\r\n            }\r\n\r\n            newStartVnode = newChildren[++newStartIndex];\r\n        }\r\n    }   \r\n    if(newStartIndex <= newEndIndex){\r\n        // 当 oldStartIndex 或者 newStartIndex 循环结束得到结束往后的索引的值进行处理\r\n        for (let index = newStartIndex; index <= newEndIndex; index++) {\r\n            // parent.appendChild(createEle(newChildren[index]));\r\n            let ele = newChildren[newEndIndex + 1] == null ? null : newChildren[newEndIndex + 1].el;\r\n            parent.insertBefore(createEle(newChildren[index]) , ele);\r\n        }\r\n    }\r\n\r\n    // 老的节点剩余未处理的 说明 新的节点不存在 该节点 \r\n    if(oldStartIndex <= oldEndIndex){\r\n        for (let index = oldStartIndex; index <= oldEndIndex; index++) {\r\n            let child = oldChildren[index];\r\n            if(child != undefined) {\r\n                parent.removeChild(child.el);\r\n            }\r\n        }\r\n    }\r\n\r\n    // old key 映射表\r\n    function makeIndexbyKey (oldChildren) {\r\n        let map = {};\r\n        oldChildren.forEach((item , index) => {\r\n            if(item.key){\r\n                map[item.key] = index;\r\n            }\r\n        });\r\n        return map;\r\n    }\r\n\r\n}\r\n\r\n// 生成真实dom\r\nexport function createEle (vnode ){\r\n    const {tag , data , children , text} = vnode;\r\n    if( typeof tag === 'string'){\r\n        vnode.el = document.createElement(tag);\r\n        \r\n        // 处理样式\r\n        updatePropertions(vnode);\r\n\r\n        children.forEach(element => {\r\n            vnode.el.appendChild(createEle(element));\r\n        });\r\n    } else {\r\n        vnode.el = document.createTextNode(text);\r\n        \r\n    }\r\n    return vnode.el;\r\n}\r\n\r\n function updatePropertions (vnode ,oldProps = {}) {\r\n    const { el , data:newProps = {} } = vnode;\r\n\r\n    // 样式处理\r\n    let newStyle = newProps.style || {};\r\n    let oldStyle = oldProps.style || {};\r\n\r\n    // 老的有 新的没有\r\n    for (const key in oldProps) {\r\n        if(!newProps[key]){\r\n            el.removeAttribute(key); // 删除真实 dom 的属性\r\n        }\r\n    }\r\n\r\n    // 老的样式中有  新的没有  删除老的样式\r\n    for (const key in oldStyle) {\r\n        if(!newStyle[key]){\r\n            el.style[key] = ''; // 删除老的样式\r\n        }\r\n    }\r\n\r\n    for (const key in newProps) {\r\n        // 设置样式\r\n        if(key === 'style'){\r\n            for (const styleKey in newProps[key]) {\r\n                el.style[styleKey] = newProps[key][styleKey];\r\n            }\r\n        } else if(key === 'class'){\r\n            el.className = newProps[key];\r\n        }else{\r\n            el.setAttribute(key, newProps[key]);\r\n        }\r\n    }\r\n}\r\n\r\n// vue 渲染流程  1. 初始化数据  2. 模板编译  3. 生成 render 函数  4. 生成虚拟节点  5.生成真实节点  6.替换页面","import  Watcher  from \"./observer/watcher\";\r\nimport { patch } from \"./vdom/patch\";\r\n\r\nexport function lifecycleMixin (Vue) {\r\n    Vue.prototype._update = function (vnode) {\r\n        const vm =  this;\r\n        // 区分首次渲染还是更新\r\n        const prevVnode = vm._vnode;\r\n        if(!prevVnode){\r\n            vm.$el = patch(vm.$el , vnode);\r\n        }else{\r\n            // 替换旧的元素\r\n            vm.$el = patch(vm._vnode , vnode);\r\n        }\r\n        vm._vnode = vnode;\r\n    }\r\n}\r\n\r\n\r\nexport function mountComponent (vm,el) {\r\n    // 调用 render 方法 去渲染el 属性\r\n\r\n    callHook(vm , 'beforeMount'); // 渲染前生命周期\r\n\r\n    // 先调用render 方法 创建虚拟节点  在将虚拟节点 渲染到页面上\r\n\r\n    let updateComponent = function () {\r\n        vm._update(vm._render());\r\n    }\r\n\r\n    //初始化的时候 创建 watcher\r\n    new Watcher(vm , updateComponent , () => {\r\n        callHook(vm , 'updated'); // 更新生命周期\r\n    } , true );\r\n\r\n    callHook(vm , 'mounted'); // 渲染后生命周期\r\n}\r\n\r\n// 掉用生命周期\r\nexport function callHook (vm , hook) {\r\n    const handlers = vm.$options[hook];\r\n    if(handlers){\r\n        for (let index = 0; index < handlers.length; index++) {\r\n            handlers[index].call(vm);\r\n        }\r\n    }\r\n}","import { callHook } from \"../lifecycle\";\r\nimport { nextTick } from \"../utils\";\r\nimport { popTarget, pushTarget } from \"./dep\";\r\n\r\nlet id = 0;\r\n\r\nclass Watcher  {\r\n    constructor(vm , exproOrFn , callback , options) {\r\n        this.vm = vm;\r\n        this.exproOrFn = exproOrFn;\r\n        this.callback = callback;\r\n        this.options = options;\r\n        this.user = options.user; // 用户watcher\r\n        this.id = id++; //watcher 的唯一标识\r\n        this.deps = []; //记录dep\r\n        this.depsId = new Set();\r\n\r\n        // getter 更新函数\r\n        if(typeof exproOrFn == 'function'){\r\n            this.getter = exproOrFn;\r\n        }else{\r\n            // exproOrFn 可能是字符串 取值获取依赖收集\r\n            this.getter = function () { // 获取 属性 值\r\n                let path = exproOrFn.split('.');\r\n                let obj = vm;\r\n                for (let index = 0; index < path.length; index++) {\r\n                    obj = obj[path[index]] ;\r\n                }\r\n                return obj;\r\n            }\r\n        }\r\n        this.value = this.get();\r\n    }\r\n    update(){\r\n        callHook(this.vm, 'beforeUpdate');\r\n        queueWatcher(this); // 批处理 ， 暂存 方法\r\n    }\r\n\r\n    get(){\r\n        // watch 先获取值 触发拦截 target 已存在当前 target \r\n        pushTarget(this); // 当前实例\r\n        let result = this.getter(); //渲染页面 获取值\r\n        popTarget();\r\n        return result;\r\n    }\r\n\r\n    addDep(dep){\r\n        let id = dep.id;\r\n        if(!this.depsId.has(id)){\r\n            this.deps.push(dep);\r\n            this.depsId.add(id);\r\n            dep.addSub(this);\r\n        }\r\n    }\r\n\r\n    run() {\r\n        let newValue = this.get();\r\n        let oldValue = this.value;\r\n        this.value = newValue; // 替换老值\r\n        if(this.user){\r\n            this.callback.call(this.vm , newValue , oldValue);\r\n        }\r\n    }\r\n}\r\n\r\n// 批处理代码\r\nlet  queue = []; // 需要批量更新的 watcher 存到队列中 \r\nlet has = {};\r\nlet panding = false;\r\n\r\n\r\nfunction flushSchedulerQueue (){\r\n    queue.forEach((watch) => {\r\n        watch.run();\r\n        if(!watch.user){\r\n            watch.callback();\r\n        }\r\n    });\r\n    queue = [];\r\n    has = {};\r\n    panding = false;\r\n}\r\n\r\nfunction queueWatcher(watcher) {\r\n    // 去重\r\n    if(!has[watcher.id]){\r\n        queue.push(watcher); // 存队列\r\n        has[watcher.id] = true;\r\n        if(!panding){\r\n            nextTick(flushSchedulerQueue);\r\n            panding = true;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Watcher;","import { observer } from \"./observer/index\";\r\nimport Watcher from \"./observer/watcher\";\r\nimport { nextTick, proxy } from './utils';\r\n\r\nexport function initSatte (vm) {\r\n    const opts = vm.$options;\r\n    if(opts.props){\r\n        initProps(vm);\r\n    }\r\n    if(opts.methods){\r\n        initMethods(vm);\r\n    }\r\n    if(opts.data){\r\n        initData(vm);\r\n    }\r\n    if(opts.computed){\r\n        initComputed(vm);\r\n    }\r\n    if(opts.watch){\r\n        initWatch(vm);\r\n    }\r\n}\r\n\r\nfunction initData (vm) {\r\n    let data = vm.$options.data;\r\n    vm._data = data = typeof data === 'function' ? data.call(vm) : data;\r\n    // 数据的劫持方案\r\n    observer(data);\r\n\r\n    // 代理\r\n    for (const key in data) {\r\n        proxy(vm,'_data',key);\r\n    }\r\n}\r\n\r\nfunction initProps () {\r\n\r\n}\r\nfunction initMethods () {\r\n    \r\n}\r\n\r\nfunction initComputed () {\r\n    \r\n}\r\n\r\n// 获取watch 里面的值 \r\nfunction initWatch (vm) {\r\n    let watch =  vm.$options.watch;\r\n    for (let key in watch) {\r\n        const handler = watch[key]; // 获取值内容\r\n        if(Array.isArray(handler)){\r\n            handler.forEach((hand) => {\r\n                createWatcher(vm , key , hand );\r\n            })\r\n        }else {\r\n            createWatcher(vm , key , handler );\r\n        }\r\n    }\r\n}\r\n\r\n// 获取watch 值触发 $watch\r\nfunction createWatcher (vm , exprOrFunction , handler , options = {}) { // options 用来标识用户watcher\r\n    if(typeof handler == 'object'){\r\n        options = options; \r\n        handler = handler.handler;\r\n    }\r\n    if(typeof handler == 'string'){\r\n        handler = vm[handler];\r\n    }\r\n\r\n    return vm.$watch(exprOrFunction , handler , options);\r\n}\r\n\r\n\r\nexport function stateMixin (Vue){\r\n    Vue.prototype.$nextTick = function(callback) {\r\n        nextTick(callback);\r\n    }\r\n    Vue.prototype.$watch = function(exprOrFunction, callback , options) {\r\n        // 数据应该依赖 这个 watcher 数据变化执行\r\n        let watcher = new Watcher(this,exprOrFunction, callback , { ...options , user:true });\r\n        if(options.immediate){\r\n            callback();\r\n        }\r\n    }\r\n}","const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; // 匹配 {{}} 内容\r\n\r\nfunction genProps (attrs) {\r\n    let str = '';\r\n    for (let index = 0; index < attrs.length; index++) {\r\n        let attr = attrs[index];\r\n        if(attr.name ==='style'){\r\n            let obj = {};\r\n            attr.value.split(';').forEach(element => {\r\n                let [key , value] = element.split(':');\r\n                obj[key] = value;\r\n            });\r\n            attr.value = obj;\r\n        }\r\n        str += `${ attr.name }:${ JSON.stringify(attr.value) },`;\r\n    }\r\n    return `{${str.slice(0,-1)}}`;\r\n}\r\n\r\nfunction gen (node){\r\n    if(node.type == 1){\r\n        return generate(node); //生成元素节点\r\n    }else{\r\n        let text = node.text;\r\n        // 如果是普通文本 直接返回处理\r\n        if(defaultTagRE.test(text)){\r\n            let tokens = []; // 存放每一段代码\r\n            let lastIndex = defaultTagRE.lastIndex = 0; // 如果正则是全局模式 每次使用前都需要更改 为 0 （不然会导致匹配不到）\r\n            let match , index;\r\n\r\n            // defaultTagRE.exec(text) 捕获到 是否存在匹配到的值\r\n            while (match = defaultTagRE.exec(text)) {\r\n                index = match.index; // 保存匹配到的索引\r\n                if(index > lastIndex) {\r\n                    tokens.push(JSON.stringify(text.slice(lastIndex , index)));\r\n                }\r\n                tokens.push(`_s(${ match[1].trim() })`);\r\n                lastIndex = index + match[0].length;\r\n            }\r\n\r\n            if(lastIndex < text.length){\r\n                tokens.push(JSON.stringify( text.slice(lastIndex) ));\r\n            }\r\n            return `_v(${ tokens.join('+') })`;\r\n        }else{\r\n            return `_v(${ JSON.stringify(text) })`;\r\n        }\r\n        \r\n    }\r\n}\r\n\r\n\r\nfunction genChildren (children) {\r\n    if(children){\r\n        return children.map((child) => gen(child)).join(',');\r\n    }\r\n}\r\n\r\nexport function generate (ast) {\r\n    let children = genChildren(ast.children);\r\n    let code = `_c('${ast.tag}',${ \r\n        ast.attrs.length ? `${genProps(ast.attrs)}` : 'undefined'\r\n    }${\r\n        ast.children ? `,${children}` : ''\r\n    })`;\r\n\r\n    return code;\r\n}","\r\nconst ncname = `[a-zA-Z ][\\\\-\\\\.0-9_a-zA-Z]*`; // 标签名\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; // ?: 匹配但不捕获\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // // 标签开头的正则 捕获的内容是标签名\r\nconst endTag = new RegExp(`^<\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>\r\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^’]*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的\r\n\r\n// 生成 ast\r\nexport function parseHTML(html) {\r\n\tlet root;\r\n\tlet currentParent;\r\n\tlet stack = [];\r\n\t// // 解析开始标签\r\n\tfunction start(tagName, attrs) {\r\n\t\tlet element = createASTElement(tagName, attrs);\r\n\t\tif (!root) {\r\n\t\t\troot = element;\r\n\t\t}\r\n\t\tcurrentParent = element;\r\n\t\tstack.push(element);\r\n\t}\r\n \r\n\t// 结束标签 创建父子关系 \r\n\tfunction end(endTag) {\r\n        let element = stack.pop();\r\n\t\tcurrentParent = stack[stack.length - 1]; // 吧子元素 = currentParent\r\n\t\tif(currentParent){\r\n\t\t\telement.parent = currentParent; // 标签的 父元素\r\n\t\t\tcurrentParent.children.push(element); // 子元素\r\n\t\t}\r\n\t}\r\n\r\n\t// //文本\r\n\tfunction chars(text) {\r\n\t\ttext = text.trim();\r\n\t\tif(text){\r\n\t\t\tcurrentParent.children.push({\r\n\t\t\t\ttype:3,\r\n\t\t\t\ttext\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tfunction createASTElement(tagName, attrs) {\r\n\t\treturn {\r\n\t\t\ttag: tagName,\r\n\t\t\ttype: 1,\r\n\t\t\tchildren: [],\r\n\t\t\tattrs,\r\n\t\t\tparent: null,\r\n\t\t};\r\n\t}\r\n\r\n\t// html 存在一直执行 这里负责吧 html 处理成 ast 树 \r\n\twhile (html) {\r\n\t\tlet textEnd = html.indexOf(\"<\");\r\n\t\tif (textEnd == 0) {\r\n\t\t\t// 肯定是标签 处理开始\r\n\t\t\tlet startTagMatch = parseStartTag();\r\n\t\t\tif (startTagMatch) {\r\n\t\t\t\tstart(startTagMatch.tagName, startTagMatch.attrs);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t// 处理结束\r\n\t\t\tconst endTagMatch = html.match(endTag);\r\n\t\t\tif (endTagMatch) {\r\n\t\t\t\tadvance(endTagMatch[0].length);\r\n\t\t\t\tend(endTagMatch[1]);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet text;\r\n\t\t// 处理文本\r\n\t\tif (textEnd > 0) {\r\n\t\t\ttext = html.substring(0, textEnd);\r\n\t\t}\r\n\t\tif (text) {\r\n\t\t\tadvance(text.length);\r\n\t\t\tchars(text);\r\n\t\t}\r\n\t}\r\n\t// 截取字符串\r\n\tfunction advance(n) {\r\n\t\thtml = html.substring(n);\r\n\t}\r\n\r\n    // 处理自定义属性 和 tagName\r\n\tfunction parseStartTag() {\r\n\t\tconst start = html.match(startTagOpen);\r\n\t\tif (start) {\r\n\t\t\tconst match = {\r\n\t\t\t\ttagName: start[1], // 标签名\r\n\t\t\t\tattrs: [],\r\n\t\t\t};\r\n\t\t\tadvance(start[0].length);\r\n\t\t\tlet end;\r\n\t\t\tlet attr;\r\n\t\t\twhile (\r\n\t\t\t\t!(end = html.match(startTagClose)) &&\r\n\t\t\t\t(attr = html.match(attribute))\r\n\t\t\t) {\r\n\t\t\t\tmatch.attrs.push({\r\n\t\t\t\t\tname: attr[1],\r\n\t\t\t\t\tvalue: attr[3] || attr[4] || attr[5],\r\n\t\t\t\t});\r\n\t\t\t\tadvance(attr[0].length); // 去掉属性\r\n\t\t\t}\r\n\t\t\tif (end) {\r\n\t\t\t\tadvance(end[0].length);\r\n\t\t\t\treturn match;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn root;\r\n}\r\n","// ast 可以描述 dom css js (ast 描述代码)\r\n// 虚拟dom 只能描述 dom 层面不一样\r\nimport { generate } from \"./generate\";\r\nimport { parseHTML } from \"./parse\";\r\n\r\n\r\n// 转为 render 函数\r\nexport function compileToFunctions(template) {\r\n\t// 1. 需要将 html 转换成ast 抽象语法树\r\n\r\n\t// 前端要掌握的数据结构 (树)\r\n\tlet ast = parseHTML(template); //\r\n\t// 2. 需要将ast树重新生成 html\r\n\tlet code = generate(ast);\r\n\t// 将字符串变成函数 限制取值范围 通过 with 来进行取值 通过改变this 让这个函数内部获取到结果\r\n\tlet render = new Function(`with( this ){ return ${code} }`);\r\n\r\n\treturn render;\r\n\r\n}\r\n","import { initSatte } from \"./state\";\r\nimport { compileToFunctions } from \"./compile/index\";\r\nimport { callHook, mountComponent } from \"./lifecycle\";\r\nimport { mergeOptions } from './utils';\r\n\r\nexport function initMixin(Vue) {\r\n\t//入口 初始化方法\r\n\tVue.prototype._init = function (options) {\r\n\t\tconst vm = this;\r\n\r\n\t\t// 将用户传递的 全局 mixin 合并\r\n\t\tvm.$options = mergeOptions( vm.constructor.options ,options);\r\n\r\n\t\tcallHook(vm , 'beforeCreate'); // 初始前生命周期\r\n\r\n\t\tinitSatte(vm); // 初始化状态\r\n\r\n\t\tcallHook(vm , 'created'); // 初始化状态生命周期\r\n\t\t// vue 响应数据的变化 讲将数据作一个初始化的劫持 （数据改变时改变视图）\r\n\r\n\t\t// 默认 如果当前有el属性 就渲染模板\r\n\t\tif (vm.$options.el) {\r\n\t\t\tvm.$mount(vm.$options.el);\r\n\t\t}\r\n\t};\r\n\tVue.prototype.$mount = function (el) {\r\n\t\t// 1 获取el dom\r\n\t\t// 2 判断如果没有 render\r\n\t\t// 3 没render 就 将 template 转为 render\r\n\r\n\t\t// 挂载\r\n\t\tconst vm = this;\r\n\r\n\t\t\r\n\t\t// 1 获取el dom\r\n\t\tel = document.querySelector(el);\r\n\t\tvm.$el = el;\r\n\t\t// 2 判断如果没有 render\r\n\t\tif (!vm.$options.render) {\r\n\t\t\t// 3 没render 就 将 template 转为 render\r\n\t\t\tlet template = vm.$options.template;\r\n\t\t\tif (!template && el) {\r\n\t\t\t\ttemplate = el.outerHTML;\r\n\t\t\t}\r\n\t\t\t// 将模板转换为 render 函数 就是 ast 虚拟dom树 最总渲染时用的都是render方法\r\n\t\t\tconst render = compileToFunctions(template);\r\n\t\t\tvm.$options.render = render;\r\n\t\t}\r\n\r\n\t\t// 需要挂载这个元素\r\n\t\tmountComponent(vm,el);\r\n\r\n\t};\r\n}\r\n","import { mergeOptions } from '../utils'\r\n\r\nexport function initGlobalApi (Vue){\r\n    // 整合了 全局api\r\n    Vue.options = {};\r\n\r\n    // 生命周期的合并策略 [beforeCreated,beforeCreated]\r\n    Vue.mixin = function (mixin) {\r\n        // 如何实现两个对象的合并\r\n        this.options = mergeOptions(this.options , mixin);\r\n    }\r\n\r\n}","\r\nexport function renderMinin (Vue){\r\n    // 虚拟节点 用1对象来描述dom\r\n    Vue.prototype._v = function (text) {\r\n        return createTextVNode(text); // 虚拟文本\r\n    }\r\n    Vue.prototype._c = function () {\r\n        return createElement(...arguments); // 虚拟节点\r\n    }\r\n    // 如果是对象会对对象进行取值\r\n    Vue.prototype._s = function (val) {\r\n        return val == null ? \"\" : (typeof val == 'object') ? JSON.stringify(val) : val;\r\n    }\r\n    Vue.prototype._render = function () {\r\n        const vm = this;\r\n        const render = vm.$options.render;\r\n        let vnode = render.call(this);\r\n        return vnode;\r\n    }\r\n}\r\n\r\n\r\nfunction createElement (tag , data = {} , ...children) {\r\n    return vnode(tag , data , data.key ,children);\r\n}\r\n\r\nfunction createTextVNode (text) {\r\n    return vnode(undefined, undefined , undefined ,undefined , text);\r\n}\r\n\r\n// 用来产生虚拟dom\r\nfunction vnode ( tag , data , key ,children , text , style){\r\n    return {  tag , data , key ,children , text , style };\r\n}","import { initMixin } from './init';\r\nimport { initGlobalApi } from './global-api/index';\r\nimport { lifecycleMixin } from './lifecycle';\r\nimport { renderMinin } from './vdom/index';\r\nimport { stateMixin } from './state';\r\n// 写 vue\r\n\r\n\r\n\r\n// 第一波 创建 vue 类 es5\r\nfunction Vue (options) {\r\n    this._init(options); //入口 组件初始化入口\r\n}\r\n\r\n\r\n// 写成一个个的插件 对 原型进行扩展\r\ninitMixin(Vue); // init 方法\r\nlifecycleMixin(Vue); //混合生命周期 渲染 _update\r\nrenderMinin(Vue); // _render\r\nstateMixin(Vue);\r\n\r\n// 初始化全局pi \r\ninitGlobalApi(Vue);\r\n\r\n// 为了看到diff的整个流程 创建1两个虚拟节点进行比对\r\n// import { compileToFunctions } from './compile/index'; \r\n// import { createEle , patch } from './vdom/patch';\r\n\r\n// let render1 = compileToFunctions('<div id=\"a\" style=\"background:red\" class=\"2\"><li key=\"li\">1</li><li key=\"li222\">2</li><span key=\"span\" style=\"color:#fff;\">我是傻逼</span><li key=\"li222222\">3</li></div>');\r\n// let vnode1 = render1.call(new Vue({ data:{ name:'我是' } }));\r\n// document.body.appendChild(createEle(vnode1))\r\n\r\n// let render2 = compileToFunctions('<div id=\"b\" style=\"background:pink\"><li key=\"li222222\">3</li><span key=\"span\" style=\"color:#fff;\">我是傻逼</span><li key=\"li\">1</li><div key=\"div\">divdiv</div></div>');\r\n// let vnode2 = render2.call(new Vue({ data:{ name:'我是傻逼' } }));\r\n\r\n// setTimeout(() => patch(vnode1 ,vnode2 ) ,2000)\r\nexport default Vue;"],"names":["arrayProto","Array","prototype","arrayMethods","Object","create","methodsToPatch","forEach","method","args","result","apply","inserted","ob","__ob__","slice","observerArray","dep","notify","proxy","vm","data","key","defineProperty","get","set","newValue","target","value","enumerable","configurable","LIFECYCLE_HOOKS","strats","mergeHook","parentValue","childValue","concat","hook","mergeOptions","parent","child","options","mergeFiled","hasOwnProperty","_objectSpread","callbacks","panding","timerFunc","flushCallback","cb","nextTick","callback","push","Promise","resolve","then","MutationObserver","observer","textNode","document","createTextNode","observe","characterData","textContent","setImmediate","setTimeout","id","Dep","subs","addDep","console","log","watcher","update","pushTarget","popTarget","Observer","isArray","__proto__","walk","keys","defineReactive","el","childDep","depend","patch","oldVnode","vnode","nodeType","createEle","parentEl","parentNode","insertBefore","nextSibling","removeChild","tag","replaceChild","text","updatePropertions","oldChildren","children","newChildren","length","updateChildren","innerHTML","index","appendChild","isSameVnode","newVnode","oldStartIndex","oldStartVnode","oldEndIndex","oldEndVnode","newStartIndex","newStartVnode","newEndIndex","newEndVnode","map","makeIndexbyKey","moveIndex","undefined","moveVNode","ele","item","createElement","element","oldProps","newProps","newStyle","style","oldStyle","removeAttribute","styleKey","className","setAttribute","lifecycleMixin","Vue","_update","prevVnode","_vnode","$el","mountComponent","callHook","updateComponent","_render","Watcher","handlers","$options","call","exproOrFn","user","deps","depsId","Set","getter","path","split","obj","queueWatcher","has","add","addSub","oldValue","queue","flushSchedulerQueue","watch","run","initSatte","opts","props","methods","initData","computed","initWatch","_data","handler","hand","createWatcher","exprOrFunction","$watch","stateMixin","$nextTick","immediate","defaultTagRE","genProps","attrs","str","attr","name","JSON","stringify","gen","node","type","generate","test","tokens","lastIndex","match","exec","trim","join","genChildren","ast","code","ncname","qnameCapture","startTagOpen","RegExp","endTag","startTagClose","attribute","parseHTML","html","root","currentParent","stack","start","tagName","createASTElement","end","pop","chars","textEnd","indexOf","startTagMatch","parseStartTag","endTagMatch","advance","substring","n","compileToFunctions","template","render","Function","initMixin","_init","constructor","$mount","querySelector","outerHTML","initGlobalApi","mixin","renderMinin","_v","createTextVNode","_c","arguments","_s","val"],"mappings":"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"}